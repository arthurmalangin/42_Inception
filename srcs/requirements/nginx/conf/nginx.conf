server {
    listen 443 ssl; # 443 pour https, et use ssl
    listen [::]:443 ssl; # pour l'ipv6, [::] veux dire toutes les ipv6

    server_name amalangi.42.fr; # faire attention au champs common name (lors de la generation des certificats) 
    #qui doit etre le meme que server_name

    ssl_protocols TLSv1.2 TLSv1.3; # pour ne pas utiliser de version antierieurs qui sont plus sensible
    ssl_certificate /etc/nginx/ssl/cert.crt; 
    ssl_certificate_key /etc/nginx/ssl/cert.key;
    # pour gen le certificat : openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout cert.key -out cert.crt
    root /var/www/html; #fichier racine 
    index index.php index.html; #Fichier a afficher

    #Pour wordpress et handle les differentes pages
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }
    # try_files = check la presence du fichier
    # $uri : verif si le fichier existe (ex: arthurmalangin.42.fr/image.png, check si /image.png existe)
    # $uri/ : si c'est dossier (par exemple, /img/), verif si le dossier existe
    # /index.php$is_args$args : Si pas trouver, redirection vers index.php + args de la request :
        # $is_args : vaux ? seulement si $args a des arguments : /img = aucun param | /img?id=15 = param donc ajout d'un '?'
        # $args : arguments de la requete ex : id=15
    

    #include de FastCgi pour le php : https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass wordpress:8010; #envoie les donnes au docker wordpress/php
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    #bonus pour rediriger vers adminer avec un /adminer
    location ~ ^/adminer(/.*$|$) {
		include fastcgi_params;
		fastcgi_pass adminer:8011;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
	}

}
